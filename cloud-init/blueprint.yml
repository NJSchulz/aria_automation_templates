formatVersion: 1
inputs:
  hostname:
    type: string
    title: Hostname
  ipAddress:
    type: string
    title: IP Address
    constraints:
      - pattern: ^\d{1,3}(\.\d{1,3}){3}$
        message: Must be a valid IP address (e.g., 192.168.1.50)
  prefixLength:
    type: integer
    title: Prefix Length
    minimum: 0
    maximum: 32
    default: 24
  gateway:
    type: string
    title: Default Gateway
  dns:
    type: array
    title: DNS Servers
    default:
      - 10.10.1.254
  dnsSearchDomains:
    type: array
    title: DNS Search Domains
    default:
      - quadroolabs.com
  rootPassword:
    type: string
    title: Root/Ubuntu Password
    encrypted: true
resources:
  Cloud_Ansible_1:
    type: Cloud.Ansible
    properties:
      host: ${resource.Cloud_vSphere_Machine_1.*}
      osType: linux
      account: Ansible
      username: schulz
      password: VMware1!
      groups:
        - test
      hostname: ${input.hostname}
      hostVariables:
        ansible_host: ${input.ipAddress}
      playbooks:
        provision:
          - /home/schulz/ansible-project/ubuntu-install-webserver.yml
  Cloud_vSphere_Machine_1:
    type: Cloud.vSphere.Machine
    properties:
      image: ubuntu-24.04
      flavor: x-small
      networks:
        - network: ${resource.Cloud_vSphere_Network_1.id}
      cloudConfig: |
        #cloud-config
        hostname: {input.hostname}
        fqdn: ${input.hostname}.${input.dnsSearchDomains}
        write_files:
          - path: /etc/netplan/99-installer-config.yaml
            content: |
              network:
                version: 2
                renderer: networkd
                ethernets:
                  ens33:
                    dhcp4: false
                    addresses:
                      - ${input.ipAddress}/${input.prefixLength}
                    routes:
                      - to: 0.0.0.0/0
                        via: ${input.gateway}
                        on-link: true
                    nameservers:
                      search: ${input.dnsSearchDomains}
                      addresses: ${input.dns}
          - path: /tmp/cloudinit-test.txt
            content: |
              Cloud-init was here at $(date)
          - path: /tmp/hostname.txt
            content: |
              Hostname set by cloud-init to ${input.hostname}

        runcmd:
          - apt update && apt upgrade -y
          - echo "Setting hostname to ${input.hostname}" >> /tmp/cloudinit.log
          - hostnamectl set-hostname ${input.hostname}
          - echo "Running netplan apply" >> /tmp/cloudinit.log
          - netplan apply >> /tmp/cloudinit.log 2>&1
          - echo "Cloud-init finished at $(date)" >> /tmp/cloudinit.log
          - netplan apply
  Cloud_vSphere_Network_1:
    type: Cloud.vSphere.Network
    properties:
      networkType: existing
